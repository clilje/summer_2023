"""
Author: Clara Lilje, adapted from pygalaxev code for personal use.

This file will use the csp function from the BC03 galaxev code to create
a convolution of the metallicities and star formation rate histories from
the TNG-50 simulation. The output is a .ised file including the SEDs at 
multiple different ages of the galaxy and a .mass file which includes 
galaxy and stellar masses at different ages.

"""

import os
import pygalaxev
from pygalaxev_cosmology import uniage
import pandas as pd
import bisect
import numpy as np

# create dictionary of redshifts and universe age for TNG-50 (manually, using the UCLA Ned Wright calculator)
#using cosmological parameters (taken from TNG-50):
h0 = 67.74
omega_m = 0.3089
omega_lambda = 0.6911

redshifts = [5.0,5.23,5.53,5.85,6.01,6.49,7.01,7.24,7.6,8.01,8.45,9.0,9.39,10.0,10.98,11.98,14.99,20.05]
age_uni = [1.173e+9,1.109e+9,1.033e+09,0.962e+09,0.929e+09,0.841e+09,0.761e+09,0.729e+09,0.684e+9,0.638e+09,0.593e+09,0.545e+09,0.515e+9,0.472e+9,0.415e+9,0.368e+9,0.269e+9,0.178e+9]
age = dict(zip(redshifts,age_uni))



#These are the dust absorbtion parameters to be used in the csp model

#tau = 1. # exponential star formation history timescale (in Gyr)
tau_V = 3 # dust effective optical depth
mu = 0.4 # fraction of attenuation due to diffuse interstellar medium
epsilon = 0. # gas recycling (no recycling if set to zero)




# creates one CSP model using galaxev

#These are catalogue specific file naming conventions
output_number = 17
#galaxy_number = [8705,39361,36824,39630]
#This decides which galaxies this get applied to, should probably be extended by a loop, checking which files exist

#low mass galaxies:
galaxy_number = [6, 7, 8, 9, 15, 17, 18, 21, 25, 33, 49, 54, 71, 1230, 1231, 1232, 1233, 1234, 1235, 1239, 1240, 1241, 1246, 1252, 1258, 2106, 2108, 2110, 2111, 2113, 2117, 2118, 2119, 2122, 2124, 2130, 2139, 2143, 2172, 3124, 3125, 3126, 3127, 3128, 3131, 3134, 3135, 3141, 3144, 3151, 3227, 4234, 4235, 4238, 4243, 4909, 4910, 4911, 4912, 4914, 4915, 4916, 4917, 4919, 4921, 4923, 4928, 4940, 4953, 5664, 5666, 5669, 5671, 6100, 6101, 6102, 6103, 6106, 6125, 6715, 6717, 6722, 6727, 6728, 6731, 6732, 7375, 7377, 7382, 7820, 7821, 8139, 8140, 8142, 8146, 8147, 8148, 8159, 8164, 8706, 8707, 8714, 8715, 8716, 9097, 9098, 9099, 9100, 9602, 9605, 9610, 9617, 9622, 10051, 10052, 10296, 10297, 10298, 10303, 10311, 10654, 10657, 10663, 10874, 10875, 10877, 10878, 11127, 11129, 11706, 11710, 11875, 11876, 11877, 11879, 11884, 11887, 12235, 12236, 12399, 12402, 12564, 12565, 12792, 12794, 12797, 12798, 12805, 13038, 13039, 13292, 13293, 13295, 13296, 13298, 13299, 13614, 13615, 13623, 13868, 13869, 14026, 14027, 14030, 14239, 14244, 14253, 14528, 14529, 14531, 14809, 14810, 15026, 15029, 15213, 15215, 15216, 15218, 15220, 15226, 15486, 15488, 15489, 15490, 15492, 15718, 15719, 16048, 16282, 16283, 16495, 16800, 16801, 16803, 16805, 16806, 16807, 17008, 17010, 17012, 17014, 17062, 17456, 17599, 17602, 17606, 17858, 17859, 17862, 18063, 18065, 18066, 18368, 18370, 18523, 18524, 18525, 18526, 18527, 18531, 18817, 19072, 19073, 19077, 19364, 19515, 19670, 19672, 19832, 19833, 19834, 19837, 20052, 20238, 20480, 20481, 20485, 20692, 20813, 20829, 20950, 20951, 20952, 20955, 21128, 21130, 21323, 21324, 21325, 21550, 21551, 21757, 21758, 21762, 21874, 21878, 21882, 22207, 22208, 22209, 22356, 22357, 22360, 22537, 22794, 22797, 22990, 22991, 23196, 23197, 23198, 23199, 23635, 23743, 23962, 24275, 24403, 24404, 24405, 24406, 24410, 24886, 24893, 25071, 25072, 25374, 25482, 25483, 25487, 25693, 25694, 25851, 25854, 26010, 26013, 26143, 26268, 26273, 26385, 26386, 26387, 26388, 26391, 26681, 26682, 26686, 26807, 27073, 27074, 27075, 27076, 27077, 27079, 27080, 27083, 27253, 27441, 27442, 27629, 27889, 27890, 28046, 28111, 28112, 28250, 28251, 28253, 28538, 28697, 28803, 28919, 28921, 29052, 29200, 29201, 29202, 29203, 29204, 29207, 29209, 29210, 29372, 29373, 29375, 29376, 29781, 29878, 29879, 29886, 30075, 30076, 30077, 30078, 30246, 30247, 30248, 30249, 30251, 30385, 30386, 30533, 30669, 30807, 30808, 30809, 30810, 30934, 30937, 31078, 31081, 31252, 31395, 31396, 31397, 31398, 31399, 31642, 31787, 31932, 31933, 32040, 32041, 32045, 32193, 32194, 32197, 32353, 32501, 32502, 32592, 32593, 32744, 32757, 32885, 32993, 33174, 33267, 33268, 33388, 33389, 33397, 33558, 33714, 33715, 33847, 33848, 33849, 33850, 33851, 33852, 34148, 34149, 34150, 34151, 34152, 34384, 34517, 34518, 34521, 34746, 34747, 34853, 34972, 34978, 35125, 35127, 35236, 35237, 35403, 35499, 35500, 35627, 35628, 35629, 35630, 35632, 35794, 35795, 35796, 35938, 36051, 36052, 36054, 36055, 36123, 36272, 36367, 36489, 36609, 36826, 36927, 36928, 36929, 36930, 36934, 36937, 37086, 37088, 37089, 37341, 37342, 37505, 37506, 37507, 37509, 37738, 37740, 37742, 37744, 37879, 38054, 38143, 38144, 38145, 38146, 38147, 38149, 38274, 38276, 38458, 38760, 38761, 38762, 38964, 38965, 39122, 39125, 39237, 39362, 39364, 39537, 39738, 39940, 40091, 40092, 40195, 40196, 40326, 40384, 40385, 40386, 40525, 40526, 40527, 40529, 40531, 40532, 40724, 40725, 40726, 40812, 40912, 40914, 41099, 41100, 41199, 41200, 41201, 41314, 41409, 41626, 41694, 41695, 41696, 41700, 41857, 41858, 41861, 42054, 42251, 42254, 42382, 42383, 42386, 42492, 42493, 42605, 42733, 42818, 43054, 43286, 43292, 43426, 43543, 43634, 43635, 43636, 43815, 43915, 43916, 43917, 44041, 44150, 44152, 44154, 44278, 44279, 44281, 44418, 44612, 44617, 44749, 44750, 44751, 44752, 44753, 44755, 44869, 44872, 45100, 45207, 45397, 45486, 45589, 45689, 45781, 45782, 45783, 45922, 46005, 46006, 46164, 46239, 46241, 46369, 46453, 46455, 46713, 46839, 46979, 46980, 47051, 47053, 47169, 47175, 47294, 47295, 47296, 47463, 47659, 47660, 47764, 47765, 47766, 47768, 47769, 47867, 47869, 48059, 48171, 48172, 48292, 48390, 48391, 48481, 48482, 48484, 48736, 48737, 48739, 49000, 49246, 49247, 49248, 49375, 49447, 49528, 49602, 49690, 49776, 49777, 49778, 49779, 49780, 49900, 49902, 50051, 50156, 50157, 50298, 50354, 50480, 50481, 50568, 50694, 50778, 50779, 50938, 51047, 51048, 51158, 51295, 51296, 51396, 51530, 51531, 51582, 51583, 51756, 51760, 51851, 51852, 51853, 51854, 51855, 51858, 51956, 52127, 52128, 52129, 52130, 52276, 52277, 52371, 52375, 52528, 52605, 52756, 52834, 52835, 52939, 52941, 53011, 53013, 53190, 53298, 53389, 53393, 53591, 53862, 53925, 54086, 54191, 54192, 54290, 54291, 54361, 54362, 54460, 54461, 54583, 54695, 54801, 54802, 54888, 54889, 54892, 54982, 55105, 55106, 55107, 55108, 55110, 55235, 55237, 55371, 55372, 55477, 55557, 55559, 55732, 55797, 55924, 56023, 56115, 56116, 56117, 56216, 56218, 56225, 56299, 56300, 56389, 56390, 56542, 56543, 56617, 56702, 56890, 56891, 56960, 56961, 57197, 57466, 57548, 57725, 57726, 57808, 57883, 57884, 57952, 58063, 58066, 58067, 58068, 58142, 58143, 58144, 58146, 58241, 58242, 58243, 58582, 58640, 58641, 58734, 58945, 58995, 59096, 59219, 59298, 59364, 59494, 59582, 59669, 59749, 59823, 59824, 60049, 60051, 60052, 60140, 60234, 60309, 60310, 60311, 60417, 60569, 60959, 61021, 61172, 61173, 61174, 61296, 61374, 61441, 61642, 61726, 61727, 61817, 61866, 61988, 62063, 62139, 62209, 62210, 62355, 62356, 62597, 62743, 62744, 62835, 62837, 62995, 63060, 63131, 63209, 63400, 63446, 63604, 63713, 63786, 63787, 63987, 63988, 64058, 64180, 64314, 64315, 64441, 64581, 64582, 64680, 64839, 64840, 64934, 65016, 65017, 65018, 65092, 65093, 65174, 65239, 65386, 65433, 65517, 65598, 65661, 65755, 65799, 65801, 65803, 65914, 65915, 66013, 66169, 66170, 66535, 66536, 66537, 66540, 66628, 66750, 66819, 66820, 66891, 66892, 66999, 67088, 67318, 67320, 67380, 67603, 67755, 67756, 67849, 67850, 68195, 68196, 68288, 68414, 68485, 68486, 68548, 68674, 68676, 68734, 68797, 68860, 68861, 68961, 69058, 69059, 69113, 69114, 69115, 69116, 69204, 69263, 69264, 69265, 69365, 69438, 69439, 69440, 69516, 69517, 69518, 69603, 69673, 69745, 69872, 70006, 70007, 70008, 70072, 70127, 70128, 70129, 70282, 70283, 70517, 70519, 70917, 70918, 71030, 71033, 71311, 71312, 71313, 71489, 71600, 71678, 71679, 71681, 71782, 71783, 71784, 71815, 71880, 71980, 71981, 72047, 72114, 72115, 72118, 72210, 72332, 72397, 72459, 72463, 72547, 72641, 72642, 72730, 72790, 72827, 72949, 73019, 73060, 73140, 73141, 73143, 73206, 73207, 73209, 73332, 73333, 73413, 73414, 73535, 73536, 73636, 73637, 73707, 73756, 73792, 73793, 73794, 73867, 73868, 74034, 74086, 74166, 74221, 74264, 74347, 74349, 74699, 74854, 74855, 74899, 74953, 75017, 75071, 75155, 75156, 75289, 75290, 75291, 75359, 75360, 75444, 75445, 75597, 75760, 75761, 75762, 75825, 75827, 75932, 75985, 76065, 76163, 76349, 76407, 76460, 76461, 76530, 76592, 76593, 76743, 76893, 76894, 77038, 77076, 77077, 77078, 77158, 77217, 77220, 77294, 77295, 77454, 77510, 77511, 77512, 77556, 77557, 77558, 77620, 77625, 77698, 77820, 77821, 77822, 77824, 78002, 78058, 78059, 78114, 78115, 78358, 78359, 78395, 78396, 78454, 78681, 78682, 78683, 78755, 78757, 78899, 78900, 78901, 79121, 79122, 79123, 79194, 79195]
galaxy_number = galaxy_number[-40:-1]

#for output 7
#galaxy_number = [0, 1, 384, 385, 751, 924, 1180, 1433, 1727, 1985, 2314, 2544, 2794, 2904, 3017, 3135, 3325, 3543, 3718, 3924, 4123, 4226, 4613, 4773, 4911, 5025, 5164, 5305, 5444, 5595, 5765, 5891, 6108, 6237, 6335, 6457, 6729, 6992, 7096, 7524, 7611, 7688, 7824, 8268, 8387, 8461, 8720, 9167, 9219, 9273, 9811, 9909, 10105, 10202, 10290, 10385, 10479, 10582, 10690, 10770, 10956, 11015, 11173, 11449, 11569, 12369, 12505, 13844]
"""
# output number 17, reduced
galaxy_number = [0,
 1,
 2,
 3,
 1228,
 2102,
 2103,
 3119,
 3120,
 4232,
 4906,
 4908,
 5663,
 6099,
 6712,
 6713,
 7371,
 7818,
 8136,
 8705,
 9094,
 9600,
 10049,
 10293,
 10294,
 10653,
 10871,
 11124,
 11452,
 11703,
 11873,
 12234,
 12396,
 12561,
 12791,
 13037,
 13613,
 13867,
 14025,
 14236,
 14524,
 14808,
 15025,
 15211,
 15483,
 15716,
 15936,
 16043,
 16281,
 16493,
 16798,
 17006,
 17298,
 17455,
 17856,
 18062,
 18366,
 18812,
 19362,
 19513,
 19668,
 19831,
 20479,
 20684,
 20809,
 20949,
 21127,
 21755,
 21873,
 22093,
 22205,
 22536,
 22679,
 22989,
 23437,
 23634,
 23742,
 23960,
 24120,
 24273,
 24568,
 24708,
 25069,
 25849,
 26142,
 26267,
 26680,
 26806,
 26945,
 27628,
 27888,
 28110,
 28418,
 28802,
 28918,
 29562,
 29672,
 29780,
 30532,
 30933,
 31501,
 32884,
 34320,
 34852,
 36269,
 38051,
 38580,
 38661,
 39737,
 40323,
 41984,
 42817,
 42995,
 43246,
 43748,
 51529]
"""

"""
#output number 17, full stack
galaxy_number = [0, 1, 2, 3, 1228, 1229, 2102, 2103, 3119, 3120, 3121, 3123, 4232, 4233, 4906, 4908, 5663, 6099, 6712, 6713, 6714,
                  7371, 7374, 7818, 8136, 8137, 8141, 8705, 8708, 9094, 9095, 9600, 9601, 10049, 10293, 10294, 10295, 10653, 10871,
                   10872, 11124, 11125, 11452, 11454, 11703, 11873, 11874, 12234, 12396, 12397, 12561, 12791, 13037, 13290,
                     13613, 13867, 14025, 14236, 14524, 14808, 15025, 15211, 15483, 15716, 15936, 16043, 16044, 16281, 16493,
                       16798, 17006, 17298, 17455, 17600, 17856, 18062, 18366, 18522, 18812, 18815, 19070, 19362, 19513, 19668,
                         19831, 20049, 20235, 20236, 20479, 20684, 20809, 20949, 21127, 21548, 21549, 21755, 21873, 22093, 22205,
                           22358, 22536, 22679, 22793, 22989, 23195, 23437, 23438, 23634, 23742, 23960, 24120, 24273, 24401, 24402,
                             24568, 24708, 24884, 25069, 25070, 25225, 25375, 25480, 25691, 25849, 26142, 26267, 26680, 26806, 
                             26945, 27252, 27440, 27628, 27759, 27888, 28035, 28110, 28248, 28418, 28537, 28698, 28802, 28918,
                               29049, 29050, 29562, 29672, 29780, 29877, 30074, 30384, 30532, 30667, 30806, 30933, 31076, 31251, 31394,
                                 31501, 31633, 31784, 31931, 32039, 32192, 32351, 32500, 32590, 32884, 32991, 33172, 33266, 33387, 33555,
                                   33713, 34031, 34146, 34320, 34381, 34516, 34664, 34745, 34852, 34971, 35124, 35235, 35402, 35498, 35793,
                                     35935, 36050, 36121, 36269, 36366, 36487, 36606, 36718, 36824, 36926, 37085, 37201, 37339, 37504, 37621,
                                       37737, 37878, 38051, 38455, 38580, 38661, 38758, 38888, 38963, 39121, 39236, 39361, 39437,
 39536,
 39630,
 39737,
 39826,
 39939,
 40090,
 40194,
 40323,
 40383,
 40617,
 40808,
 40988,
 41098,
 41198,
 41312,
 41407,
 41547,
 41625,
 41693,
 41777,
 41856,
 41984,
 42052,
 42141,
 42250,
 42381,
 42491,
 42604,
 42732,
 42817,
 42896,
 42995,
 43049,
 43116,
 43246,
 43285,
 43419,
 43540,
 43633,
 43748,
 43814,
 43914,
 44040,
 44151,
 44277,
 44417,
 44503,
 44550,
 44613,
 44988,
 45099,
 45204,
 45317,
 45396,
 45485,
 45588,
 45688,
 45921,
 46004,
 46162,
 46238,
 46368,
 46454,
 46556,
 46712,
 46978,
 47050,
 47168,
 47293,
 47462,
 47581,
 47658,
 47763,
 47866,
 47951,
 48058,
 48170,
 48291,
 48389,
 48480,
 48572,
 48658,
 48735,
 48822,
 48916,
 48998,
 49068,
 49163,
 49373,
 49445,
 49527,
 49600,
 49688,
 49899,
 49997,
 50050,
 50290,
 50353,
 50400,
 50479,
 50567,
 50692,
 50859,
 51294,
 51395,
 51529,
 51682,
 51757,
 51955,
 52068,
 52275,
 52370,
 52454,
 52527,
 52603,
 52684,
 52755,
 52833,
 52938,
 53010,
 53099,
 53189,
 53388,
 53485,
 53590,
 53683,
 53759,
 53861,
 53924,
 54005,
 54084,
 54289,
 54360,
 54459,
 54582,
 54631,
 54694,
 54800,
 54887,
 54980,
 55234,
 55317,
 55476,
 55556,
 55650,
 55875,
 56215,
 56388,
 56468,
 56541,
 56616,
 56799,
 56889,
 57109,
 57196,
 57263,
 57353,
 57465,
 57547,
 57597,
 57651,
 57724,
 57806,
 57951,
 58379,
 58447,
 58530,
 58580,
 58639,
 58733,
 58820,
 58860,
 58941,
 58994,
 59095,
 59179,
 59296,
 59363,
 59427,
 59493,
 59580,
 59668,
 59748,
 59822,
 59924,
 59988,
 60233,
 60416,
 60502,
 60568,
 60742,
 60817,
 60891,
 60958,
 61020,
 61115,
 61295,
 61373,
 61440,
 61494,
 61571,
 61641,
 61725,
 61816,
 61865,
 61938,
 61986,
 62062,
 62208,
 62278,
 62446,
 62520,
 62596,
 62673,
 62834,
 62881,
 62948,
 62994,
 63130,
 63292,
 63445,
 63712,
 63986,
 64057,
 64118,
 64179,
 64261,
 64383,
 64440,
 64506,
 64679,
 64706,
 64772,
 65091,
 65173,
 65238,
 65319,
 65385,
 65432,
 65516,
 65597,
 65753,
 66012,
 66283,
 66340,
 66403,
 66748,
 66818,
 66889,
 66998,
 67162,
 67235,
 67379,
 67462,
 67534,
 67604,
 67661,
 67952,
 68082,
 68151,
 68287,
 68413,
 68484,
 68544,
 68733,
 68960,
 69013,
 69203,
 69364,
 69602,
 69871,
 70071,
 70358,
 70822,
 71248,
 71547,
 72546,
 73018,
 73931,
 75070,
 75666,
 77037,
 82571,
 93706]
"""
# selects the stellar template library:
# Low-resolution 'Miles' library, Chabrier IMF
ssp_dir = '../Miles_Atlas/Chabrier_IMF/'        #I don't actually use these here
tempname = 'hr_xmiless'

#This just defines the work directory, this does get used
work_dir = './'
ssp_dir = '../../'

#Looping over all galaxies by index as defined above
for i in galaxy_number:

    #file naming convention as in my directories
    filename = 'Files_SFRH_TNG50/SFH_TNG50_out_'+str(output_number)+'_gal_'+str(i)+'_lowmass.txt'

    #file convention as in the SFH files by Melanie
    df = pd.read_csv(filename,header=None,sep="\s+| |  ",
                        names=['output_number','redshift','galaxy ID',
                                'BH mass','BH accretion rate',
                                'bolLum1','bolLum2', 'lumXray1', 'lumXray2',
                                'Mstar','DMmass','SFR','Z'],engine='python',dtype=float)
    

    """
    Prepare individual SFRH for each galaxy
    ONCE
    """
    """
    print(df)
    df = df[df['SFR']>0.0]
    print(df)
    #get the important values for making the ASCII file as input for the BC03 code
    redshift = np.flip(df['redshift'].to_numpy())
    sfr = np.flip(df['SFR'].to_numpy())
    data_out = np.zeros((len(redshift),2))
    #defines birth date as age of the universe at the earliest redshift the galaxy appears
    birth = age[redshift[0]]
    x = 0
    while x < len(redshift):
        #prepares array to have age of galaxy and then sfr at that age
        data_out[x][0] = age[redshift[x]]-birth
        data_out[x][1] = sfr[x]
        x += 1

    #convert array to be data frame and then write to a file ready to use for BC03
    df2 = pd.DataFrame(data_out)
    df2.to_csv('norm_catalog/'+str(output_number)+'SFRH_gal_'+str(i)+'_lowmass.ASCII',header=None,index=False,sep='\t')
    """
    sfh_pars = 'norm_catalog/'+str(output_number)+'SFRH_gal_'+str(i)+'_lowmass.ASCII'
    

    """
    Select metallicity of initial model
    """
    # Selects the metallicity:
    a = df['Z'].to_numpy()
    #we choose as metallicity the latest metallicity the galaxy has
    #Z = float(a[a!=0][0])*0.02
    Z = float(a[0])*0.02
    #print(a,Z)
    
    #Z = 0.02 # solar metallicity
    #Dictionary of the metallicities as they correspond within BC03
    Zcode_dic = {0.0001:'m22', 0.0004:'m32', 0.004:'m42', 0.008:'m52', 0.02:'m62', 0.05:'m72', 0.1:'m82'}

    #choose the name of the metallicity that most closely corresponds
    res = bisect.bisect_left(list(Zcode_dic.keys()), Z)
    if res == 7:
        Zcode  = list(Zcode_dic.values())[res-1]
    elif res == 1:
        Zcode = list(Zcode_dic.values())[0]
    else:
        if abs((list(Zcode_dic.keys())[res]-Z)) < abs(list(Zcode_dic.keys())[res-1]-Z):
            Zcode = list(Zcode_dic.values())[res]
        else:
            Zcode = list(Zcode_dic.values())[res-1]
    #Zcode = Zcode_dic[Z]
    #print(Zcode)
    #print(Z)

    """
    Writes important values to library file
    only do once!
    """

    """
    #This prepares the library for only galaxies that have a BH, to be used later
    if df['BH mass'].to_numpy()[0] != 0:
        with open('norm_catalog/library_galaxies_with_BH'+str(output_number)+'_lowmass.txt', 'a') as f:
            f.write(str(i)+','+str(data_out[-1][0])+','+str(df['Mstar'].to_numpy()[0])+','+str(df['BH mass'].to_numpy()[0])+','+str(df['bolLum2'].to_numpy()[0])+'\n')

    #write galaxy ID, age at end of SFR, mstar in msun, bhmass, AGN lum for all galaxies
    with open('norm_catalog/library_galaxies'+str(output_number)+'_lowmass.txt', 'a') as f:
        f.write(str(i)+','+str(data_out[-1][0])+','+str(df['Mstar'].to_numpy()[0])+','+str(df['BH mass'].to_numpy()[0])+','+str(df['bolLum2'].to_numpy()[0])+'\n')
  
  """



    #notes
    #isedname = ssp_dir+'bc2003_%s_%s_chab_ssp.ised'%(tempname, Zcode)
    #isedname = 'bc2003_lr_BaSeL_m62_chab_ssp.ised'
    #bc2003_hr_xmiless_m22_chab_ssp

    #The name of the original base file to be convolved
    isedname = 'bc2003_hr_xmiless_'+str(Zcode)+'_chab_ssp.ised'
    #outname = 'TNG_50_library/bc03_Z=%6.4f_tau=%5.3f_tV=%5.3f_mu=%3.1f_eps=%5.3f'%(Z, tau, tau_V, mu, epsilon)
    
    #Name of final output files
    outname = 'norm_catalog/TNG50_out_'+str(output_number)+'_gal_'+str(i)+'_lowmass_evenmoredust'

    #Run the pygalaxev method which returns an .ised and a .mass file
    pygalaxev.run_csp_galaxev(isedname, outname, sfh='custom', sfh_pars=sfh_pars, tau_V=tau_V,mu=mu, epsilon=0., work_dir=work_dir)
    #pygalaxev.run_csp_galaxev_no_dust(isedname, outname, sfh='custom', sfh_pars=sfh_pars, tau_V=tau_V,mu=mu, epsilon=0., work_dir=work_dir)

